import os
import time
import numpy as np

def convert(fname, overwrite=False, **kwds):
    '''
    Pulls out the data of a csv file with headers and arranges it
    as Var = [1, 2, 3, 4, 5] and writes it to
    ./fname.py.  It warns on overwrite.  Each variable is on a new line.

    Keywords
    --------
    delimiter : string, optional
        default = ","
    skiprows : int, optional
        default = 0
    usecols : list, optional
        default : None
    names : {None, True, string, sequence}, optional

    Example usage
    convert('/path/to/file.csv')

    See Also
    ----
    numpy.genfromtxt
    numpy.recfromtxt

    Notes
    -----
    Data should be columm ordered in the data.py file as y x1 x2 ...
    '''
    opts = kwds.keys()
    if 'delimiter' in opts:
        delimit = kwds['delimiter']
    else: delimit = ','
#    if 'usecols' in opts:
#        uc = kwds['usecols']
#    else: uc = None
#    if 'dtype' in opts:
#        dt = kwds['dtype']
#    else: dt = np.str
#    if 'names' in opts:
#        n = kwds['names']
#    else: n = True
#    if 'skiprows' in opts:
#        sr = kwds['skiprows']
#    elif 'skiprows' not in opts and n is True: sr = 1
#    elif 'skiprows' not in opts and n is False: sr = 0
    getnames = open(fname) # scrape for header names, done this we because dtype=np.str
    names = getnames.readline()
    getnames.close()
    names = names.strip(os.linesep)
    names = names.split(",")
    for i in range(len(names)): names[i] = names[i].strip("\"")
#    dataset = np.genfromtxt(fname, delimiter=delimit, skiprows = sr,
#                            names=n, usecols = uc, dtype=dt)
    dataset = np.genfromtxt(fname, delimiter=delimit, dtype=np.str, skiprows=1)
    dir,f = os.path.split(fname)
    f=f.split('.')
    new_file = os.path.join(dir,f[0]+'.py')
    if os.path.isfile(new_file):
        print 'Do you want to overwrite the existing file %s?' % new_file
        exist = raw_input("[y/n] >")
        if 'y' in exist.lower():
            pass
        else:
            return
    f = open(new_file, 'w')
    t = time.strftime("%a, %d %b %Y, %H:%M %Z")
    f.write('# Autogenerated by .data_utils.convert on '+t+os.linesep*2)
    f.write('names = '+str(names).upper()+os.linesep*2)
    for i,name in enumerate(names):
        f.write(name.upper()+' = '+str(dataset[:,i].tolist())+os.linesep*2)
    f.close()

