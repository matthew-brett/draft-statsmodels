"""
Covariance matrices for RLM tests.

Obtained from SAS.
"""
import numpy as np
### Based on stackloss data ###

### Covariances
def _shift_intercept(arr):
    """
    A convenience function to make the SAS covariance matrix
    compatible with stats.models.rlm covariance
    """
    side = np.sqrt(len(arr))
    arr = np.array(arr).reshape(side,side)
    tmp = np.zeros((side,side))
    tmp[:-1,:-1] = arr[1:,1:]
    tmp[-1,-1] = arr[0,0]
    tmp[-1,:-1] = arr[0,1:]
    tmp[:-1,-1] = arr[1:,0]
    return tmp

huber_h1 = [95.8813, 0.19485, -0.44161, -1.13577, 0.1949, 0.01232, -0.02474,
        -0.00484, -0.4416, -0.02474, 0.09177, 0.00001, -1.1358, -0.00484,
        0.00001, 0.01655]
huber_h1 = _shift_intercept(huber_h1)

huber_h2 = [82.6191, 0.07942, -0.23915, -0.95604, 0.0794, 0.01427, -0.03013,
        -0.00344, -0.2392, -0.03013, 0.10391, -0.00166, -0.9560, -0.00344,
        -0.00166, 0.01392]
huber_h2 = _shift_intercept(huber_h2)

huber_h3 = [70.1633, -0.04533, -0.00790, -0.78618, -0.0453, 0.01656, -0.03608,
        -0.00203, -0.0079, -0.03608,  0.11610, -0.00333, -0.7862, -0.00203,
        -0.00333,  0.01138]
huber_h3 = _shift_intercept(huber_h3)

hampel_h1 = [141.309,  0.28717, -0.65085, -1.67388, 0.287,  0.01816, -0.03646,
        -0.00713, -0.651, -0.03646,  0.13524,  0.00001, -1.674, -0.00713,
        0.00001,  0.02439]
hampel_h1 = _shift_intercept(hampel_h1)

hampel_h2 = [135.248,  0.18207, -0.36884, -1.60217, 0.182, 0.02120, -0.04563,
        -0.00567, -0.369, -0.04563,  0.15860, -0.00290, -1.602, -0.00567,
        -0.00290, 0.02329]
hampel_h2 = _shift_intercept(hampel_h2)

hampel_h3 = [128.921,  0.05409, -0.02445, -1.52732, 0.054,  0.02514, -0.05732,
        -0.00392, -0.024, -0.05732,  0.18871, -0.00652, -1.527, -0.00392,
        -0.00652,  0.02212]
hampel_h3 = _shift_intercept(hampel_h3)

bisquare_h1 = [90.3354,  0.18358, -0.41607, -1.07007, 0.1836, 0.01161,
        -0.02331, -0.00456, -0.4161, -0.02331,  0.08646, 0.00001, -1.0701,
        -0.00456, 0.00001,  0.01559]
bisquare_h1 = _shift_intercept(bisquare_h1)

bisquare_h2 = [67.82521, 0.091288, -0.29038, -0.78124, 0.091288, 0.013849,
        -0.02914, -0.00352, -0.29038, -0.02914, 0.101088, -0.001, -0.78124,
        -0.00352,   -0.001, 0.011766]
bisquare_h2 = _shift_intercept(bisquare_h2)

bisquare_h3 = [48.8983, 0.000442, -0.15919, -0.53523, 0.000442, 0.016113,
        -0.03461, -0.00259, -0.15919, -0.03461, 0.112728, -0.00164, -0.53523,
        -0.00259, -0.00164, 0.008414]
bisquare_h3 = _shift_intercept(bisquare_h3)

class andrews(object):
    andrews_h1 = [87.5357, 0.177891, -0.40318, -1.03691, 0.177891,  0.01125,
            -0.02258, -0.00442, -0.40318, -0.02258, 0.083779, 6.481E-6,
            -1.03691, -0.00442, 6.481E-6,  0.01511]
    andrews_h1 = _shift_intercept(andrews_h1)

    andrews_h2 = [66.50472,  0.10489,  -0.3246, -0.76664, 0.10489, 0.012786,
            -0.02651,  -0.0036, -0.3246, -0.02651,  0.09406, -0.00065,
            -0.76664,  -0.0036, -0.00065, 0.011567]
    andrews_h2 = _shift_intercept(andrews_h2)

    andrews_h3 = [48.62157, 0.034949, -0.24633, -0.53394, 0.034949, 0.014088,
                -0.02956, -0.00287, -0.24633, -0.02956, 0.100628, -0.00104,
                -0.53394, -0.00287, -0.00104, 0.008441]
    andrews_h3 = _shift_intercept(andrews_h3)

    resid = [2.503338458, -2.608934536, 3.5548678338, 6.9333705014,
            -1.768179527, -2.417404513, -1.392991531, -0.392991531,
            -1.704759385,-0.244545418, 0.7659115325, 0.3028635237,
            -3.019999429,-1.434221475,2.1912017882, 0.8543828047,
            -0.366664104,0.4192468573,0.8822948661,1.5378731634,
            -10.44592783]

    sresids = [1.0979293816, -1.144242351, 1.5591155202, 3.040879735,
            -0.775498914, -1.06023995, -0.610946684, -0.172360612,
            -0.747683723, -0.107254214, 0.3359181307, 0.1328317233,
            -1.324529688, -0.629029563, 0.9610305856, 0.3747203984,
            -0.160813769, 0.1838758324, 0.3869622398, 0.6744897502,
            -4.581438458]

    weights = [0.8916509101, 0.8826581922, 0.7888664106, 0.3367252734,
            0.9450252405, 0.8987321912, 0.9656622, 0.9972406688,
            0.948837669, 0.9989310017, 0.9895434667, 0.998360628,
            0.8447116551, 0.9636222149, 0.916330067, 0.9869982597,
            0.9975977354, 0.9968600162, 0.9861384742, 0.9582432444, 0]

    conf_int = [(0.7203,1.1360),(.0819,1.2165),(-.3532,.1287),
                (-60.6305,-23.9555)]

    def __init__(self):
        self.params = [0.9282, 0.6492, -.1123,-42.2930]
        self.bse = [.1061, .2894, .1229, 9.3561]
        self.scale = 2.2801
        self.df_model = 3.
        self.df_resid = 17.
        self.bcov_unscaled = []
        self.h1 = self.andrews_h1
        self.h2 = self.andrews_h2
        self.h3 = self.andrews_h3


### Huber's Proposal 2

class huber_huber(object):
    def __init__(self):
        self.h1 = [114.4936, 0.232675, -0.52734, -1.35624, 0.232675, 0.014714,
                -0.02954, -0.00578, -0.52734, -0.02954, 0.10958, 8.476E-6,
                -1.35624, -0.00578, 8.476E-6, 0.019764]
        self.h1 = _shift_intercept(self.h1)
        self.h2 = [103.2876, 0.152602, -0.33476, -1.22084, 0.152602, 0.016904,
                -0.03766, -0.00434, -0.33476, -0.03766, 0.132043, -0.00214,
                -1.22084, -0.00434, -0.00214, 0.017739]
        self.h2 = _shift_intercept(self.h2)
        self.h3 = [ 91.7544, 0.064027, -0.11379, -1.08249, 0.064027, 0.019509,
                -0.04702, -0.00278, -0.11379, -0.04702, 0.157872, -0.00462,
                -1.08249, -0.00278, -0.00462, 0.015677]
        self.h3 = _shift_intercept(self.h3)
        self.resid = None
        self.sresids = None
        self.weights = None
        self.conf_int = [(0.5612,1.0367),(.3987,1.6963),
                (-.4106,.1405),(-62.0611,-20.1172)]
        self.params = (.7990,1.0475,-0.1351,-41.0892)
        self.bse = (.1213,.3310,.1406,10.7002)
        self.scale = 3.2946
        self.df_model = 3
        self.df_resid = 17


class hampel_huber(object):
    def __init__(self):
        self.h1 = [147.4727, 0.299695, -0.67924, -1.7469, 0.299695, 0.018952,
                -0.03805, -0.00744, -0.67924, -0.03805, 0.141144, 0.000011,
                -1.7469, -0.00744, 0.000011, 0.025456]
        self.h1 = _shift_intercept(self.h1)
        self.h2 = [141.148, 0.190007, -0.38493, -1.67206, 0.190007, 0.02213,
                -0.04762, -0.00592, -0.38493, -0.04762, 0.165518, -0.00303,
                -1.67206, -0.00592, -0.00303, 0.024301]
        self.h2 = _shift_intercept(self.h2)
        self.h3 = [134.5444, 0.05645, -0.02552, -1.59394, 0.05645, 0.026232,
                -0.05982, -0.00409, -0.02552, -0.05982, 0.196946, -0.0068,
                -1.59394, -0.00409, -0.0068, 0.023083]
        self.h3 = _shift_intercept(self.h3)
        self.resid = None
        self.sresids = None
        self.weights = None
        self.conf_int = [(0.4619,1.0016),(.5145,1.9872),
                (-.4607,.1648),(-64.0727,-16.4697)]
        self.params = (.7318,1.2508,-0.1479,-40.2712)
        self.bse = (.1377, .3757, .1596, 12.1438)
        self.scale = 3.2827
        self.df_model = 3
        self.df_resid = 17

class bisquare_huber(object):
    def __init__(self):
        self.h1 = [129.9556, 0.264097, -0.59855, -1.5394, 0.264097,
                0.016701, -0.03353, -0.00656, -0.59855, -0.03353,
                0.124379, 9.621E-6, -1.5394, -0.00656, 9.621E-6, 0.022433]
        self.h1 = _shift_intercept(self.h1)
        self.h2 = [109.7685, 0.103038, -0.25926, -1.28355, 0.103038, 0.0214,
                -0.04688, -0.00453, -0.25926, -0.04688, 0.158535, -0.00327,
                -1.28355, -0.00453, -0.00327, 0.018892]
        self.h2 = _shift_intercept(self.h2)
        self.h3 = [91.80527, -0.09171, 0.171716, -1.05244, -0.09171,
                0.027999, -0.06493, -0.00223, 0.171716, -0.06493, 0.203254,
                -0.0071, -1.05244, -0.00223, -0.0071, 0.015584]
        self.h3 = _shift_intercept(self.h3)
        self.resid = None
        self.sresids = None
        self.weights = None
        self.conf_int = [(0.5399,1.0465),(.3565,1.7389),
                (-.4271,.1600),(-63.2381,-18.5517)]
        self.params = (.7932, 1.0477, -0.1335, -40.8949)
        self.bse = (.1292, .3527, .1498, 11.3998)
        self.scale = 3.3052
        self.df_model = 3
        self.df_resid = 17


class andrews_huber(object):
    def __init__(self):
        self.h1 = [129.9124, 0.264009, -0.59836, -1.53888, 0.264009,
                0.016696, -0.03352, -0.00656, -0.59836, -0.03352, 0.124337,
                9.618E-6, -1.53888, -0.00656, 9.618E-6, 0.022425]
        self.h1 = _shift_intercept(self.h1)
        self.h2 = [109.7595, 0.105022, -0.26535, -1.28332, .105022, 0.021321,
                -0.04664, -0.00456, 0.26535, -0.04664, 0.157885, -0.00321,
                -1.28332, -0.00456, -0.00321, 0.018895]
        self.h2 = _shift_intercept(self.h2)
        self.h3 = None
#        self.h3 = _shift_intercept(self.h3)
        self.resid = None
        self.sresids = None
        self.weights = None
        self.conf_int = [(0.5395,1.0460),(.3575,1.7397),
                (-.4271,.1599),(-63.2213,-18.5423)]
        self.params = (.7928, 1.0486, -0.1336, -40.8818)
        self.bse = (.1292, .3526, .1498, 11.3979)
        self.scale = 3.3062
        self.df_model = 3
        self.df_resid = 17
